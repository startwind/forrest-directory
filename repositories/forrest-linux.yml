commands:
  findInFiles:
    name: "files:find:pattern"
    description: "Find all files with a specific text pattern in it."
    prompt: "grep -rnw '${path_to_check}' -e '${pattern}'"

  findBigFiles:
    name: "files:find:big"
    description: "Find all files that are larger than a given size."
    prompt: "find ${path_to_check} -type f -size +${size_in_mega_byte}M"
    parameters:
      path_to_check:
          name: directory
          description: the directory to search in
          type: forrest_filename
          file-formats:
           - directory

  files-tar-decompress:
    name: 'files:tar:decompress'
    description: 'Decompress the given tar file'
    prompt: 'tar -zxvf ${filename}'
    parameters:
      filename:
        name: tar file
        description: Tar file that should be extracted.
        type: forrest_filename
        file-formats:
         - tar.gz
         - tar
         
  files-zip-decompress:
    name: 'files:zip:decompress'
    description: 'Decompress the given zip file.'
    prompt: 'unzip ${filename}'
    parameters:
      filename:
        name: zip file
        description: Zip file that should be extracted
        type: forrest_filename
        file-formats:
         - zip
         
  find-files-name:
    name: 'files:find:name'
    description: 'Find all files with a given name.'
    prompt: 'find ${dir_to_search_in} -name ${filename}'
    parameters:
      dir_to_search_in:
          name: directory
          description: the directory to search in
          type: forrest_filename
          file-formats:
           - directory    

  files-symlink-create:
    name: 'files:symlink:create'
    description: 'Create a symlink.'
    prompt: 'ln -s ${filename} ${link}'
 
  find-files-older:
    name: 'files:find:older'
    description: 'Find all files that are older than a given period.'
    prompt: 'find ${dir_to_search_in} -mtime +${number_on_days} -print'
    parameters:
      dir_to_search_in:
          name: directory
          description: the directory to search in
          type: forrest_filename
          file-formats:
           - directory    
           
  directory-size:
    name: 'files:directory:size'
    description: 'Return the size a of given dir.'
    prompt: 'du -sh ${directory}'
    parameters:
      directory:
        type: forrest_filename
        file-formats:
          - directory

  zip-compress:
    name: 'zip:compress'
    description: 'Compress the given directory or file.'
    prompt: 'zip -r ${output_zip_file} ${input_directory}'
    parameters:
      input_directory:
        type: forrest_filename
        file-formats:
          - directory

  zip-compress-with-password:
    name: 'zip:compress:with-password'
    description: 'Compress the given directory or file with a password'
    prompt: 'zip --password ${password} -r ${output_zip_file} ${input_directory}'
    parameters:
      input_directory:
        type: forrest_filename
        file-formats:
          - directory
      password:
        type: forrest_password

  version-info:
      name: 'version:info'
      description: Show information about the Linux version
      prompt: cat /etc/os-release

  system-ports-open:
      name: 'system:ports:open'
      description: Show all open ports
      prompt: lsof -i -P -n | grep LISTEN
      
  'file:length':
      name: 'file:length'
      description: 'Return the number of lines of a given file.'
      output-format: The file has %s lines.
      prompt: 'cat ${filename} | wc -l'
      
  'linux:file:show':
      name: 'linux:file:show'
      description: 'Show the content of a file.'
      prompt: 'cat ${filename}'

  'linux:directory:make':
      name: 'linux:directory:make'
      description: 'Create a single directory'
      prompt: 'mkdir ${directory_name}'

  'linux:directory:make:recursive':
      name: 'linux:directory:make:recursive'
      description: 'Create a directory (recursive).'
      prompt: 'mkdir -p ${directory_name}'
